"use strict";(self.webpackChunkrust_hdl_org=self.webpackChunkrust_hdl_org||[]).push([[75],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,h=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return a?n.createElement(h,i(i({ref:t},p),{},{components:a})):n.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3208:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:98},i="Roadmap",s={unversionedId:"roadmap",id:"roadmap",title:"Roadmap",description:"It's difficult to generate an accurate roadmap for a project like RustHDL, given that it's not sponsored and so vast in scope.",source:"@site/docs/roadmap.md",sourceDirName:".",slug:"/roadmap",permalink:"/roadmap",draft:!1,editUrl:"https://github.com/samitbasu/rust-hdl/tree/main/packages/create-docusaurus/templates/shared/docs/roadmap.md",tags:[],version:"current",sidebarPosition:98,frontMatter:{sidebar_position:98},sidebar:"tutorialSidebar",previous:{title:"Wrapping IP Cores",permalink:"/guide/rusthdl/wrapping"},next:{title:"Change Log",permalink:"/changelog"}},l={},u=[],p={toc:u},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"roadmap"},"Roadmap"),(0,r.kt)("p",null,"It's difficult to generate an accurate roadmap for a project like RustHDL, given that it's not sponsored and so vast in scope.\nNonetheless, here is the current set of milestones/priorities:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Documentation!  The surface area of RustHDL is large, and it needs tons of documentation.  This is the main goal for the forseable future.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The crates need to be reorganized.  I originally had a series of smaller crates, but that gets to be a pain during development.  Now that things\nhave mostly stabilized, smaller crates lead to faster compile times, and a better feature-controlled user experience."),(0,r.kt)("li",{parentName:"ul"},"Macros need to be documented, like ",(0,r.kt)("inlineCode",{parentName:"li"},"dff_setup"),"."))),(0,r.kt)("li",{parentName:"ul"},"Tutorials on the BSPs and using Hardware.  While its fun to play with simulations, the real hardware is generally more ",(0,r.kt)("del",{parentName:"li"},"frustrating")," satisfying.\nI have the following boards on hand (or used to), so I can do a basic tutorial on each of these as I go.",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"* Alchitry Cu - this is an inexpensive ICE40-based board that can be programmed using only open source tools.  Probably one of the least expensive\nways to get started.  I have a few of these, and I'd like to use them as the primary platform for the simple examples.\n* Alchitry Au - this is far more powerful, and includes the DDR and an Artix-7 FPGA.  You need to use commercial toolchains for this, but it's\nstill reasonably priced for an FPGA board.\n* Orange Crab - this is a fun board based on the Lattice ECP5, and includes a LPDDR and a super-small form factor.  It can also be targetted with\nopen source tools.\n* [OpalKelly](https://www.opalkelly.com) XEM6010 - an oldie, but great FPGA SOM based on the workhorse Spartan-6 from Xilinx.  The toolchain is way deprecated.\nI think this thing is great, but you can't get it anymore.  So...\n* [OpalKelly](https://www.opalkelly.com) XEM7010 - the modern version of the XEM6010.  Includes an Artix-7 and DDR.  RustHDL wraps the `FrontPanel` API to\nmake working with OpalKelly modules easier to use.\n* Lattice ECP5 development board\n* More...?\n"))),(0,r.kt)("li",{parentName:"ul"},"Analysis",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"I have the start of a timing analysis module in process in RustHDL.  I would like to finish it.  It constructs a full dataflow analysis of your\ndesign, and then looks for unprotected time-domain crossings."))),(0,r.kt)("li",{parentName:"ul"},"Make a ",(0,r.kt)("inlineCode",{parentName:"li"},"1.0.0")," release.  This will be an official release, and then breaking changes will become more painful.  So it needs to be done\nwhen there is a significant stability in the design.  I do not intend to make any substantial changes before releasing ",(0,r.kt)("inlineCode",{parentName:"li"},"1.0.0"),".  Just documentation\nand tweaks to improve usability."),(0,r.kt)("li",{parentName:"ul"},"Future releases will focus on a richer set of widgets and more analytics."),(0,r.kt)("li",{parentName:"ul"},"DSP blocks",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"FFT - at the least a basic decimation-in-time FFT engine written in RustHDL"),(0,r.kt)("li",{parentName:"ul"},"CORDIC - arctangent's in hardware, baby!"),(0,r.kt)("li",{parentName:"ul"},"FIR filters - I have one now, but it doesn't really synthesize properly on Lattice FPGAs"))),(0,r.kt)("li",{parentName:"ul"},"Nanoprocessors",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"A number of applications would benefit from the hardware-reuse of a processor, but do not need/want\nthe overhead of a full blown uC (like a RISC-V core).  For those, it would be nice to be able to\ndefine state machines with reusable ALUs and other micro-processor-like features."))),(0,r.kt)("li",{parentName:"ul"},"Communication Bridges",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"FPGAs with buttons and LEDs are definitely cool.  But even better are FPGAs that can serve as low-drama, high speed compute\nengines.  To do that, you need to get data in and out of them at speed.  USB is one choice.  But what about Ethernet, PCI-e, etc?"))),(0,r.kt)("li",{parentName:"ul"},"Backend",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"I have run into a depressing number of bugs in commercial toolchains.  So I would like to start to move synthesis into\nRustHDL itself.  Yeah - I'm nuts."))),(0,r.kt)("li",{parentName:"ul"},"Place-and-route",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/YosysHQ/nextpnr"},"NextPNR")," is awesome.  I ran into problems trying to use it in one of my larger designs.  I'm not sure what to do about that.")))))}d.isMDXComponent=!0}}]);